# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# set modifier
set $super Mod4
set $alt Mod1
set $mod Mod4

## autostart
exec --no-startup-id nitrogen --restore

workspace_layout tabbed

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango: Noto Sans 8

# start dmenu (a program launcher)
bindsym $super+p exec --no-startup-id xfce4-popup-whiskermenu -p
bindsym $super+c exec --no-startup-id "/home/ludat/.local/bin/,calc.sh Super"
# esto esta aca por un rato
# bindsym $super+z exec --no-startup-id xdotool type --clearmodifiers 'await '
# bindsym $super+d exec rofi -lines 12 -padding 18 -width 60 -location 0 -show drun -sidebar-mode -columns 3 -font 'Noto Sans 8'

# common apps keybinds
# cosas viejas, xfce-screenshooter fue reemplazado por flameshot
# bindsym Print exec xfce4-screenshooter --region --clipboard
# bindsym $super+Print exec xfce4-screenshooter
bindsym Print exec flameshot gui
bindsym $super+Print exec flameshot gui --delay 3000
bindsym $super+l exec --no-startup-id xflock4
bindsym $super+k exec keepassxc

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym $super+XF86AudioMute exec --no-startup-id playerctl play-pause --all-players
bindsym $super+XF86AudioRaiseVolume exec --no-startup-id playerctl next --player=spotify
bindsym $super+XF86AudioLowerVolume exec --no-startup-id playerctl previous --player=spotify
bindsym $super+XF86AudioMicMute exec --no-startup-id "~/.local/bin/,switch-headset"
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

bindsym $mod+Return exec xfce4-terminal

# Changing again to the current workspace goes to the last workspace
workspace_auto_back_and_forth yes

no_focus [class=xfce4-notifyd]

# steal focus if a window requests it
focus_on_window_activation smart

# Make the currently focused window a scratchpad
bindsym $super+Shift+minus move scratchpad
# Show the first scratchpad window
bindsym $super+minus scratchpad show

# kill focused window
bindsym $super+x kill
bindsym $super+Shift+x exec --no-startup-id xkill

# change focus
bindsym $super+Tab focus next
bindsym $super+Shift+Tab focus prev

bindsym $super+Left workspace prev_on_output
bindsym $super+Right workspace next_on_output
bindsym $super+Shift+Left move window to workspace prev_on_output; workspace prev_on_output
bindsym $super+Shift+Right move window to workspace next_on_output; workspace next_on_output

# move focused window
bindsym $super+Down focus down
bindsym $super+Up focus up
bindsym $super+Shift+Down move down
bindsym $super+Shift+Up move up

bindsym $super+a workspace prev_on_output
bindsym $super+d workspace next_on_output
bindsym $super+Shift+a move window to workspace prev_on_output; workspace prev_on_output
bindsym $super+Shift+d move window to workspace next_on_output; workspace next_on_output


set $up HDMI2
set $down eDP1
bindsym $super+w focus output $up
bindsym $super+s focus output $down
bindsym $super+Shift+w move window to output $up; focus output $up
bindsym $super+Shift+s move window to output $down; focus output $down
# bindsym $super+Control+w move workspace to output $up
# bindsym $super+Control+s move workspace to output $down
bindsym $super+Control+s move workspace to output next

# toggle tiling / floating
bindsym $super+space floating toggle

# togle between split and tabbed
bindsym $super+t layout toggle splith tabbed

# hide_edge_borders smart

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change focus between tiling / floating windows
# bindsym $mod+Space focus mode_toggle

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10; workspace $ws10

# reload the configuration file
bindsym $mod+Escape reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+Escape restart

# resize window (you can also use the mouse for that)
bindsym $super+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $super+m mode "mark"
mode "mark" {
    # switch to workspace
    bindsym Right workspace next
    bindsym Left workspace prev
    bindsym Tab focus right
    bindsym Shift+Tab focus left

    bindsym 1 workspace 1
    bindsym 2 workspace 2
    bindsym 3 workspace 3
    bindsym 4 workspace 4
    bindsym 5 workspace 5
    bindsym 6 workspace 6

    # template
    # bindsym Shift+the_key mark the_key; exec "notify-send --expire-time=3000 'Mark `the_key` set'"
    # bindsym the_key [con_mark="the_key"] focus
    # bindsym Control+the_key unmark the_key

    bindsym Shift+a mark a; exec "notify-send --expire-time=3000 'Mark `a` set'"
    bindsym a [con_mark="a"] focus
    bindsym Control+a unmark a

    bindsym Shift+b mark b; exec "notify-send --expire-time=3000 'Mark `b` set'"
    bindsym b [con_mark="b"] focus
    bindsym Control+b unmark b

    bindsym Shift+c mark c; exec "notify-send --expire-time=3000 'Mark `c` set'"
    bindsym c [con_mark="c"] focus
    bindsym Control+c unmark c

    bindsym Shift+q mark q; exec "notify-send --expire-time=3000 'Mark `q` set'"
    bindsym q [con_mark="q"] focus
    bindsym Control+q unmark q

    bindsym Shift+w mark w; exec "notify-send --expire-time=3000 'Mark `w` set'"
    bindsym w [con_mark="w"] focus
    bindsym Control+w unmark w

    bindsym Shift+e mark e; exec "notify-send --expire-time=3000 'Mark `e` set'"
    bindsym e [con_mark="e"] focus
    bindsym Control+e unmark e

    bindsym Shift+r mark r; exec "notify-send --expire-time=3000 'Mark `r` set'"
    bindsym r [con_mark="r"] focus
    bindsym Control+r unmark r

    bindsym Shift+t mark t; exec "notify-send --expire-time=3000 'Mark `t` set'"
    bindsym t [con_mark="t"] focus
    bindsym Control+t unmark t

    bindsym Shift+y mark y; exec "notify-send --expire-time=3000 'Mark `y` set'"
    bindsym y [con_mark="y"] focus
    bindsym Control+y unmark y

    bindsym Shift+u mark u; exec "notify-send --expire-time=3000 'Mark `u` set'"
    bindsym u [con_mark="u"] focus
    bindsym Control+u unmark u

    bindsym Shift+i mark i; exec "notify-send --expire-time=3000 'Mark `i` set'"
    bindsym i [con_mark="i"] focus
    bindsym Control+i unmark i

    bindsym Shift+o mark o; exec "notify-send --expire-time=3000 'Mark `o` set'"
    bindsym o [con_mark="o"] focus
    bindsym Control+o unmark o

    bindsym Shift+p mark p; exec "notify-send --expire-time=3000 'Mark `p` set'"
    bindsym p [con_mark="p"] focus
    bindsym Control+p unmark p

    bindsym Shift+s mark s; exec "notify-send --expire-time=3000 'Mark `s` set'"
    bindsym s [con_mark="s"] focus
    bindsym Control+s unmark s

    bindsym Shift+d mark d; exec "notify-send --expire-time=3000 'Mark `d` set'"
    bindsym d [con_mark="d"] focus
    bindsym Control+d unmark d

    bindsym Shift+f mark f; exec "notify-send --expire-time=3000 'Mark `f` set'"
    bindsym f [con_mark="f"] focus
    bindsym Control+f unmark f

    bindsym Shift+g mark g; exec "notify-send --expire-time=3000 'Mark `g` set'"
    bindsym g [con_mark="g"] focus
    bindsym Control+g unmark g

    bindsym Shift+h mark h; exec "notify-send --expire-time=3000 'Mark `h` set'"
    bindsym h [con_mark="h"] focus
    bindsym Control+h unmark h

    bindsym Shift+j mark j; exec "notify-send --expire-time=3000 'Mark `j` set'"
    bindsym j [con_mark="j"] focus
    bindsym Control+j unmark j

    bindsym Shift+k mark k; exec "notify-send --expire-time=3000 'Mark `k` set'"
    bindsym k [con_mark="k"] focus
    bindsym Control+k unmark k

    bindsym Shift+l mark l; exec "notify-send --expire-time=3000 'Mark `l` set'"
    bindsym l [con_mark="l"] focus
    bindsym Control+l unmark l

    bindsym Shift+z mark z; exec "notify-send --expire-time=3000 'Mark `z` set'"
    bindsym z [con_mark="z"] focus
    bindsym Control+z unmark z

    bindsym Shift+x mark x; exec "notify-send --expire-time=3000 'Mark `x` set'"
    bindsym x [con_mark="x"] focus
    bindsym Control+x unmark x

    bindsym Shift+v mark v; exec "notify-send --expire-time=3000 'Mark `v` set'"
    bindsym v [con_mark="v"] focus
    bindsym Control+v unmark v

    bindsym Shift+n mark n; exec "notify-send --expire-time=3000 'Mark `n` set'"
    bindsym n [con_mark="n"] focus
    bindsym Control+n unmark n

    bindsym Shift+m mark m; exec "notify-send --expire-time=3000 'Mark `m` set'"
    bindsym m [con_mark="m"] focus
    bindsym Control+m unmark m

    bindsym Backspace unmark
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# panel
# window rules, you can find the window class using xprop
for_window [class=".*"] border pixel 2
for_window [class=gnome-calculator] floating enable

# colour of border, background, text, indicator, and child_border
client.focused          #bf616a #2f343f #d8dee8 #bf616a #d8dee8
client.focused_inactive #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.unfocused        #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.urgent           #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.placeholder      #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.background       #2f343f

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  status_command i3status
  tray_output none
}
