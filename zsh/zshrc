# zmodload zsh/zprof
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:$HOME/.ghcup/bin:$HOME/.cabal/bin"
export PATH="$PATH:$HOME/.emacs.d/bin"
export PATH="$PATH:$HOME/.nix-profile/bin"
#
# Emacs mode
bindkey -e

### Added by zinit's installer
export ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
source "$ZINIT_HOME/zinit.zsh"
# autoload -Uz _zinit
# (( ${+_comps} )) && _comps[zinit]=_zinit
### End of zinit installer's chunk
zinit wait blockf lucid \
    atpull'zinit creinstall -q .' \
    for zsh-users/zsh-completions

zinit wait lucid for \
    OMZP::kubectl \
    OMZP::git \
    OMZP::heroku \
    as=completion OMZP::docker-compose

# zinit snippet OMZ::plugins/command-not-found/command-not-found.plugin.zsh
# zinit wait lucid atload="git-escape-magic" src=git-escape-magic for knu/zsh-git-escape-magic

zinit wait lucid atload"_zsh_autosuggest_start" for zsh-users/zsh-autosuggestions

zinit wait lucid \
    atload'bindkey -M emacs ^P history-substring-search-up; bindkey -M emacs ^N history-substring-search-down' \
    for zsh-users/zsh-history-substring-search

zinit light romkatv/powerlevel10k

export ATUIN_NOBIND="true"
zinit wait lucid \
    atload'bindkey ^r _atuin_search_widget' \
    for ellie/atuin

zinit wait lucid \
    atinit"zicompinit; zicdreplay" \
    for zdharma-continuum/fast-syntax-highlighting

# Move backward one word with ctrl+left arrow
bindkey '^[[1;5D' backward-word
# Move forward one word with ctrl+right arrow
bindkey '^[[1;5C' forward-word
# Supr does correct thingy
bindkey "^[[3~" delete-char

eval "$(direnv hook zsh)"

#set history size
export HISTSIZE=1000000
#save history after logout
export SAVEHIST=1000000
#history file
export HISTFILE=~/.zhistory
## History command configuration
setopt extended_history # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups # ignore duplicated commands history list
setopt hist_ignore_space # ignore commands that start with space
setopt hist_verify # show command with history expansion to user before running it
setopt inc_append_history # add commands to HISTFILE in order of execution
setopt share_history # share command history data


eval "$(fasd --init auto)"
unalias sd # there is a program already and I never is the fasd `sd` command
unalias s

alias j="fasd_cd -d"
alias e='f -e $EDITOR' # quick opening files with vim
alias m='f -i -e mpv' # quick opening files with mplayer
alias o='a -e xdg-open' # quick opening files with xdg-open
alias ls='ls --color=auto'
alias ll='ls -lh'
alias la='ls -a'
alias l='ls -lah'

alias ec='emacsclient'

alias cup='nmcli con up'
alias cdown='nmcli con down'

# # Then, source plugins and add commands to $PATH
# zplug load

DEFAULT_USER=ludat


alias pbp="xsel -bo"
alias pbc="xsel -bi"
alias dc=docker-compose

# nf [-NUM] [COMMENTARY...] -- never forget last N commands
nf() {
  local n=-1
  [[ "$1" = -<-> ]] && n=$1 && shift
  fc -lnt ": %Y-%m-%d %H:%M ${*/\%/%%} ;" $n | tee -a .neverforget
}

# Increment integer argument
# autoload incarg
# zle -N incarg
# bindkey '^X' incarg

function rancd {
    tempfile="$(mktemp /tmp/chosendir.XXXXXXXX)"
    ranger --choosedir="$tempfile"
    cd -- "$(cat "$tempfile")"
    rm -- "$tempfile"
}

# export PYENV_ROOT="$HOME/.pyenv"
# export PATH="$PYENV_ROOT/bin:$PATH"

# ,init_pyenv() {
#     eval "$(pyenv init -)"
#     eval "$(pyenv virtualenv-init -)"
# }

export RIPGREP_CONFIG_PATH=~/.config/ripgreprc

,temp () {
  export OLD_DIR="$PWD"
  export TEMP_DIR=$(mktemp -d)
  for file in "$@"; do
    cp -rv "$file" "$TEMP_DIR/"
  done
  cd "$TEMP_DIR"
  zsh
  EXIT_CODE="$?"

  cd "$OLD_DIR"

  if [ "$EXIT_CODE" = 0 ]; then
      rm -rfv "$TEMP_DIR"
  fi
}

,date () {
    date --iso-8601=${1:-seconds}
}

function ,postgres () {
  docker run --rm -ti -e "POSTGRES_DB=$1" -e "POSTGRES_USER=$2" -e "POSTGRES_PASSWORD=$3" -p 5432:5432 postgres:alpine
}

# Edit command in #EDITOR using ctrl+e
autoload edit-command-line
zle -N edit-command-line
bindkey '^e' edit-command-line

# The following lines were added by compinstall
zstyle ':completion:*' menu select=2
zstyle ':completion:*' completer _expand _complete _ignored _approximate
# zstyle ':completion:*' matcher-list '' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|[._-/]=** r:|=**' 'l:|=* r:|=*'
zstyle ':completion:*' max-errors 3
zstyle :compinstall filename '/home/ludat/.zshrc'
# setopt completealiases

# autoload -Uz compinit
zstyle ':completion:*:complete:*' list-colors 'no=00' 'fi=00' 'di=01;34' 'ln=01;36' 'pi=40;33' 'so=01;35' 'do=01;35' 'bd=40;33;01' 'cd=40;33;01' 'or=40;31;01' 'ex=01;32' '*.tar=01;31' '*.tgz=01;31' '*.arj=01;31' '*.taz=01;31' '*.lzh=01;31' '*.zip=01;31' '*.z=01;31' '*.Z=01;31' '*.gz=01;31' '*.bz2=01;31' '*.deb=01;31' '*.rpm=01;31' '*.jar=01;31' '*.jpg=01;35' '*.jpeg=01;35' '*.png=01;35' '*.gif=01;35' '*.bmp=01;35' '*.pbm=01;35' '*.pgm=01;35' '*.ppm=01;35' '*.tga=01;35' '*.xbm=01;35' '*.xpm=01;35' '*.tif=01;35' '*.tiff=01;35' '*.mpg=01;35' '*.mpeg=01;35' '*.avi=01;35' '*.fli=01;35' '*.gl=01;35' '*.dl=01;35' '*.xcf=01;35' '*.xwd=01;35'

# compinit
# zinit cdreplay -q

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir rvm vcs)
# POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs history command_execution_time time)
# prompt powerlevel9k
